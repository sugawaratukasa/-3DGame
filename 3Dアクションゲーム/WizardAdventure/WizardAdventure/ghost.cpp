//******************************************************************************
// 幽霊[ghost.cpp]
// Author : 管原 司
//******************************************************************************

//******************************************************************************
//インクルードファイル
//******************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "scene3d.h"
#include "model.h"
#include "player.h"
#include "ghost.h"
//******************************************************************************
// マクロ定義
//******************************************************************************
#define ROT	(D3DXVECTOR3(0.0f,0.0f,0.0f))
//******************************************************************************
//静的メンバ変数
//******************************************************************************

//******************************************************************************
// コンストラクタ
//******************************************************************************
CGhost::CGhost(int nPriority) : CEnemy(nPriority)
{
}
//******************************************************************************
// デストラクタ
//******************************************************************************
CGhost::~CGhost()
{

}
//******************************************************************************
// 生成関数
//******************************************************************************
CGhost * CGhost::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	// CGhostのポインタ
	CGhost *pGhost = NULL;

	// NULLの場合
	if (pGhost == NULL)
	{
		// メモリ確保
		pGhost = new CGhost;

		// NULLでない場合
		if (pGhost != NULL)
		{
			// 情報設定
			pGhost->SetModel(pos, ROT, size);

			// オブジェクトタイプ設定
			pGhost->SetObjType(OBJTYPE_ENEMY);

			// 初期化
			pGhost->Init();
		}
	}
	// ポインタを返す
	return pGhost;
}
//******************************************************************************
// 初期化処理
//******************************************************************************
HRESULT CGhost::Init(void)
{
	// 初期化
	CEnemy::Init();

	return S_OK;
}
//******************************************************************************
// 終了処理
//******************************************************************************
void CGhost::Uninit(void)
{
	// 終了
	CEnemy::Uninit();
}
//******************************************************************************
// 更新処理
//******************************************************************************
void CGhost::Update(void)
{
	// 更新
	CEnemy::Update();
}

//******************************************************************************
// 描画処理
//******************************************************************************
void CGhost::Draw(void)
{
	// 描画
	CEnemy::Draw();
}